version: '2'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: api.toy
    ports:
      - "8010:8010"
    expose:
      - "8010"
    volumes:
      - .:/app
    networks:
      - toy_psql_network
      - toy_redis_network
    depends_on:
      - toy_psql
      - toy_redis
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_ENDPOINT=${REDIS_ENDPOINT}
      - REDIS_PORT=${REDIS_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
  toy_psql:
    image: "mdillon/postgis:11"
    restart: always
    container_name: psql.toy
    networks:
      - toy_psql_network
    volumes:
      - toy_psql_volume:/var/lib/postgresql/data
    command: -p ${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - "${DB_PORT}"
    ports:
      - "${DB_PORT}:${DB_PORT}"
  toy_redis:
    restart: always
    image: redis:latest
    container_name: redis.toy
    command: --port ${REDIS_PORT}
    networks:
      - toy_redis_network
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"


networks:
  toy_redis_network:
    driver: bridge
  toy_psql_network:
    driver: bridge

volumes:
  toy_psql_volume:
